{"version":3,"file":"static/js/822.6b7dc17e.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.js","components/ContactItem/ContactItem.styled.js","components/ContactItem/ContactItem.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","pages/ContactsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Field as FormikField, Form as FormikForm } from 'formik';\n\nexport const Title = styled.h2`\n  font-weight: 600;\n  font-size: 32px;\n  line-height: 1.22;\n  color: ${props => props.theme.black};\n  margin-bottom: 36px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 12px;\n`;\n\nexport const Form = styled(FormikForm)`\n  border: 1px solid ${props => props.theme.border};\n  border-radius: 10px;\n  display: flex;\n  flex-direction: column;\n  gap: 32px;\n  padding: 32px 42px;\n  margin-bottom: 36px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 18px;\n  font-weight: 600;\n  font-size: 24px;\n  line-height: 1.21;\n  color: ${props => props.theme.black};\n`;\n\nexport const Field = styled(FormikField)`\n  height: 40px;\n  border: 1px solid ${props => props.theme.border};\n  border-radius: 10px;\n  padding-left: 12px;\n`;\n\nexport const Button = styled.button`\n  align-self: center;\n  padding: 12px 36px;\n  background-color: ${props => props.theme.accent};\n  border: none;\n  border-radius: 10px;\n  cursor: pointer;\n  font-weight: 600;\n  font-size: 24px;\n  line-height: 1.21;\n  display: inline-flex;\n  flex-wrap: wrap;\n  align-items: center;\n  justify-content: center;\n  gap: 6px;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover,\n  &:focus {\n    background-color: ${props => props.theme.hover};\n  }\n`;\n","import { nanoid } from 'nanoid';\nimport { Formik, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { Form, Label, Field, Button } from './ContactForm.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectContacts } from 'redux/selectors';\nimport { addContact } from 'redux/operations';\n\nimport { HiUserPlus } from 'react-icons/hi2';\n\nconst initialValues = {\n  name: '',\n  number: '',\n};\n\nconst schema = Yup.object().shape({\n  name: Yup.string()\n    .matches(\n      /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n      'Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer'\n    )\n    .min(3, 'Too short')\n    .max(30, 'Too long')\n    .required('Required')\n    .trim(),\n  number: Yup.string()\n    .matches(\n      /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/,\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n    )\n    .min(7, 'Too short')\n    .max(20, 'Too long')\n    .required('Required')\n    .trim(),\n});\n\nfunction ContactForm() {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, { resetForm }) => {\n    if (contacts.find(contact => contact.name === values.name)) {\n      alert(`${values.name} is already in contacts`);\n    } else {\n      dispatch(addContact(values));\n    }\n    resetForm();\n  };\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={handleSubmit}\n      validationSchema={schema}\n    >\n      <Form>\n        <Label>\n          Name\n          <Field type=\"text\" name=\"name\" id={nanoid()} />\n          <ErrorMessage name=\"name\" render={msg => <div>{msg}</div>} />\n        </Label>\n        <Label>\n          Number\n          <Field type=\"tel\" name=\"number\" id={nanoid()} />\n          <ErrorMessage name=\"number\" render={msg => <div>{msg}</div>} />\n        </Label>\n        <Button type=\"submit\">\n          Add contact <HiUserPlus />{' '}\n        </Button>\n      </Form>\n    </Formik>\n  );\n}\n\nexport default ContactForm;\n","import styled from 'styled-components';\n\nexport const Contact = styled.div`\n  display: flex;\n  gap: 18px;\n  font-weight: 600;\n  font-size: 24px;\n  line-height: 1.21;\n  color: ${props => props.theme.black};\n`;\n\nexport const ContactSpan = styled.span`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 8px;\n`;\n\nexport const Button = styled.button`\n  font-size: 16px;\n  line-height: 1.19;\n  border: none;\n  border-radius: 10px;\n  cursor: pointer;\n  display: inline-flex;\n  flex-wrap: wrap;\n  align-items: center;\n  justify-content: center;\n  gap: 6px;\n  background-color: ${props => props.theme.accent};\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover,\n  &:focus {\n    background-color: ${props => props.theme.hover};\n  }\n  padding: 4px 12px;\n`;\n","import PropTypes from 'prop-types';\nimport { Contact, Button, ContactSpan } from './ContactItem.styled';\n\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/operations';\n\nimport { HiTrash, HiOutlineUser } from 'react-icons/hi2';\n\nfunction ContactItem({ name, number, id }) {\n  const dispatch = useDispatch();\n  const handleDelete = () => {\n    dispatch(deleteContact(id));\n  };\n\n  return (\n    <>\n      <Contact>\n        <ContactSpan>\n          <HiOutlineUser /> {name}:\n        </ContactSpan>\n        {number}\n      </Contact>\n      <Button id={id} type=\"button\" onClick={handleDelete}>\n        Delete\n        <HiTrash />\n      </Button>\n    </>\n  );\n}\n\nexport default ContactItem;\n\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n  width: 764px;\n  margin: 36px auto 0 auto;\n`;\n\nexport const Contact = styled.li`\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const Message = styled.div`\n  font-weight: 600;\n  font-size: 32px;\n  line-height: 1.22;\n  color: ${props => props.theme.black};\n  margin-top: 24px;\n  text-align: center;\n`;\n","import ContactItem from 'components/ContactItem/ContactItem';\nimport { List, Contact, Message } from './ContactList.styled';\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  selectLoading,\n  selectError,\n  selectFilteredContacts,\n} from 'redux/selectors';\nimport { fetchContacts } from 'redux/operations';\n\nfunction ContactList() {\n  const isLoading = useSelector(selectLoading);\n  const error = useSelector(selectError);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const filteredContacts = useSelector(selectFilteredContacts);\n\n  return (\n    <>\n      {isLoading && <Message>Loading contacts...</Message>}\n      {error && <Message>There are no contacts. Please, try again.</Message>}\n      <List>\n        {filteredContacts &&\n          filteredContacts.map(({ name, number, id }) => {\n            return (\n              <Contact key={id}>\n                <ContactItem name={name} number={number} id={id} />\n              </Contact>\n            );\n          })}\n      </List>\n    </>\n  );\n}\n\nexport default ContactList;\n","import styled from 'styled-components';\n\nexport const FilterForm = styled.form`\n  display: flex;\n  justify-content: space-between;\n  width: 764px;\n  margin: 0 auto;\n`;\n\nexport const Label = styled.label`\n  font-weight: 600;\n  font-size: 24px;\n  line-height: 1.21;\n  color: ${props => props.theme.black};\n`;\n\nexport const Input = styled.input`\n  height: 40px;\n  border: 1px solid ${props => props.theme.border};\n  border-radius: 10px;\n  padding-left: 12px;\n  width: 300px;\n`;\n","import { FilterForm, Label, Input } from './Filter.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectFilter } from 'redux/selectors';\nimport { changeFilter } from 'redux/filterSlice';\n\nfunction Filter() {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const handleInputChange = e => {\n    dispatch(changeFilter(e.target.value));\n  };\n\n  return (\n    <FilterForm>\n      <Label htmlFor=\"search\">Find contacts by name</Label>\n      <Input\n        type=\"text\"\n        name=\"search\"\n        value={filter}\n        onChange={handleInputChange}\n      />\n    </FilterForm>\n  );\n}\n\nexport default Filter;\n","import ContactForm from \"components/ContactForm/ContactForm\";\nimport { Title } from \"components/ContactForm/ContactForm.styled\";\nimport ContactList from \"components/ContactList/ContactList\";\nimport Filter from \"components/Filter/Filter\";\n\nimport {HiPencilSquare, HiIdentification} from 'react-icons/hi2';\n\nconst Contacts = () => {\n    return (\n        <div>\n            <Title>Phonebook <HiPencilSquare/> </Title>\n            <ContactForm />\n            <Title>Contacts <HiIdentification/> </Title>\n            <Filter />\n            <ContactList/>\n        </div>\n    )\n};\n\nexport default Contacts;"],"names":["Title","styled","props","theme","black","Form","FormikForm","border","Label","Field","FormikField","Button","accent","hover","initialValues","name","number","schema","Yup","shape","matches","min","max","required","trim","contacts","useSelector","selectContacts","dispatch","useDispatch","onSubmit","values","resetForm","find","contact","alert","addContact","validationSchema","type","id","nanoid","render","msg","Contact","ContactSpan","onClick","deleteContact","List","Message","isLoading","selectLoading","error","selectError","useEffect","fetchContacts","filteredContacts","selectFilteredContacts","map","FilterForm","Input","filter","selectFilter","htmlFor","value","onChange","e","changeFilter","target"],"sourceRoot":""}